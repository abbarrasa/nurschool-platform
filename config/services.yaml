# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    nurschool.path.user_images: /uploads/images/users
    nurschool.path.school_images: /uploads/images/schools
    config_mailer:
        sandbox: '%env(bool:SENDGRID_SANDBOX_MODE)%'
        default:
            address: '%env(resolve:MAILER_DEFAULT_ADDRESS)%'
            name: '%env(resolve:MAILER_DEFAULT_NAME)%'
        confirmation:
            template: '%env(resolve:SENDGRID_CONFIRMATION_TEMPLATE_ID)%'
        resetting:
            template: '%env(resolve:SENDGRID_RESETTING_TEMPLATE_ID)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
#            $projectDir: '%kernel.project_dir%'
            $mailer: '@nurschool.mailer'

    _instanceof:
        Nurschool\Wizard\Stage\StageInterface:
            tags: [ 'wizard_stage' ]

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Nurschool\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Nurschool\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    nurschool.mailer:
        class: Nurschool\Mailer\SendGridMailer
        arguments:
            - '@og_send_grid.provider'
            - '@router'
            - '%config_mailer%'

#    EasyCorp\Bundle\EasyAdminBundle\Form\Type\FileUploadType:
#        tags:
#            - { name: form.type, alias: easyadmin_fileupload }

    Nurschool\Util\AvatarGenerator:
        arguments:
            - '%kernel.project_dir%/public%nurschool.path.user_images%'
            - '@doctrine.orm.entity_manager'

    Nurschool\Wizard\Container\DefaultStageContainer:
        arguments:
            $stages: !tagged_iterator wizard_stage

    Nurschool\EventListener\LoginListener:
        tags:
            - { name: kernel.event_listener, event: security.interactive_login }

    Nurschool\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }